%%양영하
clear all
close all
clc


%Quasi-Newton Method   Golden section method                               
Termination_criterion = 1e-05;
Penalty_parameter = 1.00e+01;
%---ITER---STEP SIZE-------NORM----------------------------DESIGN VARIABLES---------------------------------------------

gold = [  1  7.27380e-02  1.24111e+00  20.48616622019151023  21.50655993783218634  20.99636309645501342;
        2  3.52117e-01  1.56727e-01  20.24556875347626317  21.34288943906137703  21.32711743502356683;
        3  1.07949e+01  1.12186e+00  19.56658322878746503  20.55543764280812624  20.59895106197830472;
        4  3.71630e+00  9.43434e-01  17.66375506443927890  18.83114187980594068  18.78452165841104815;
        5  1.50965e+01  5.59178e-01   2.26110152725955338   2.86367132922066503   3.08365699771765378;
        6  1.38962e-01  8.81085e-01   2.10757623486084311   2.70103422520953940   2.89286933159417980;
        7  5.54586e-02  2.62028e-01   2.12907302670413179   2.69186082589646158   2.71174852213064499;
        8  7.34741e-01  1.67198e-02   2.25737355523205396   2.84480839753207349   2.84557948574093533;
        9  1.08987e+00  7.31561e-05   2.25979782702802989   2.84717848669682461   2.84715628186301828;
        10  1.11232e+00  8.91846e-06   2.25990810322521174   2.84730742367158607   2.84731172352434481  ];

%  Quasi-Newton Method   Golden section with Quadratic approx

quad = [  1  7.27532e-02  1.24136e+00  20.48605890119399220  21.50666573761967726  20.99636233685364317;
        2  3.52122e-01  1.57673e-01  20.24550882419985953  21.34295553311529758  21.32711353326846293;
        3  1.06135e+01  1.11702e+00  19.57870591278257777  20.56795903039566653  20.61125763000576683;
        4  3.79573e+00  9.54548e-01  17.65030537854551795  18.81853814022989013  18.77126969417888702;
        5  1.50746e+01  5.99828e-01   2.19885700381017735   2.78947024162919988   3.01579389679530507;
        6  9.45097e-02  7.30837e-01   2.07979591688055487   2.66515323005794702   2.87201256610583577;
        7  8.22403e-02  2.11758e-01   2.14041889839284627   2.70545591925123974   2.71798433285865881;
        8  7.05183e-01  1.75430e-02   2.25699840602932955   2.84436871974422267   2.84481086643227243;
        9  1.11092e+00  1.74755e-04   2.25981244536734671   2.84719294257386624   2.84719419272753971;
        10  1.19067e+00  3.47641e-05   2.25991378848340352   2.84731458554604711   2.84731578508605576;
        11  5.33296e-03  3.45786e-05   2.25991370359975807   2.84731448354636330   2.84731568451567663;
        12  6.48663e-05  3.45764e-05   2.25991370257288704   2.84731448231242323   2.84731568329887264;
        13  3.70659e-07  3.45764e-05   2.25991370256701707   2.84731448230536976   2.84731568329191731;
        14  2.48424e-02  3.37164e-05   2.25991334118054166   2.84731404646887709   2.84731525331298174;
        15  1.01997e-09  3.37164e-05   2.25991334118052567   2.84731404646885800   2.84731525331296309;
        16  6.62811e-01  3.39988e-06   2.25991304464778064   2.84731304809655450   2.84731472294577337  ];

PHI = 2^(1/3);
x1 = 0.01:0.01:5;
x2 = 0.01:0.01:5;
x3 = 0.01:0.01:5; 

y = zeros(size(x1,2),size(x2,2),size(x3,2));

r = 1;

for i = 1:size(x1,2)
    for j = 1:size(x2,2)
        for k = 1:size(x3,2)
            h(1) = PHI^2 * x1(i) * (x1(i) + x3(k) - x2(j)) / (x2(j) * x3(k)) - 1;
            h(2) = 1 - x2(j) * (1 + x2(j) - x1(i)) / (PHI^3 * x1(i));
            g(1) = max(x1(i) / 20 - 1,0);
            g(2) = max(x2(j) / 20 - 1,0);
            g(3) = max(x3(k) / 20 - 1,0);
            g(4) = max(-x1(i),0);
            g(5) = max(-x2(j),0);
            g(6) = max(-x3(k),0);
            H = sum(h.^2);
            G = sum(g.^2);
            y(i,j,k) = (x2(j) - x3(k))^2 + r * (H + G);
        end
    end
end
for i = 1:5
    level(i) = 10^-i;
end
level = [0.0001 0.001 0.1 10 1000];
for i = 1:5
    p = patch(isosurface(x1,x2,x3,y,level(i)));
    p.FaceVertexCData = level(i);
    p.FaceColor = 'red';
    p.EdgeColor = 'none';
    p.FaceAlpha = 0.3;
    drawnow
end
hold on
plot3(gold(:,4),gold(:,5),gold(:,6),'Marker','*');
xlabel("x1")
ylabel("x2")
zlabel("x3")
cd 'F:\수업\최적설계\gif'
ax = [1 1 1];
for i = 1:50
    view(ax)
    ax(2) = ax(2) + 0.1;
    drawnow
    saveas(gcf,sprintf("%d.jpg",i));
end
cd 'F:\수업\최적설계'

temp = y(100,100,100);

for i = 1:size(x1,2)
    for j = 1:size(x2,2)
        for k = 1:size(x3,2)
            if temp > y(i,j,k) && y(i,j,k) ~= NaN
                temp = y(i,j,k)
                im = i
                jm = j
                km = k
            end
        end
    end
end
temp
%     c = (x(2) - x(3))^2;
% 
%     h(1) = PHI^2 * x(1) * (x(1) + x(3) - x(2)) / (x(2) * x(3)) - 1;
%     h(2) = 1 - x(2) * (1 + x(2) - x(1)) / (PHI^3 * x(1));
%     g(1) = x(1) / 20 - 1;
%     g(2) = x(2) / 20 - 1;
%     g(3) = x(3) / 20 - 1;
%     g(4) = -x(1);
%     g(5) = -x(2);
%     g(6) = -x(3);
% 
%     for i = 1:2
%         c = c + h(i)^2;
%     end
%     for i = 1:6
%         g(i) = max(g(i), 0);
%         c = c + g(i)^2;
%     end